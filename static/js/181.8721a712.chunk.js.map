{"version":3,"file":"static/js/181.8721a712.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/SearchMovies/MoviesList/movies-list.module.css?7239","webpack://react-homework-template/./src/components/SearchMovies/MoviesItems/movies-items.module.css?111d","components/SearchMovies/MoviesItems/MoviesItems.jsx","components/SearchMovies/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchMovies/search-movies.module.css?f705","webpack://react-homework-template/./src/components/SearchMovies/SearchBar/search-bar.module.css?4891","components/SearchMovies/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/components/SearchMovies/Button/button.css?f7b9","components/SearchMovies/Button/Button.jsx","components/SearchMovies/MoviesSearch.jsx","components/pages/Movies/Movies.jsx","components/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search\":\"movies-list_search__is7oT\",\"movies\":\"movies-list_movies__28KZs\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies-items_list__77mWk\",\"link\":\"movies-items_link__c4EFM\",\"title\":\"movies-items_title__fKex7\"};","import {React, memo} from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './movies-items.module.css';\n\nconst MoviesItems = ({ movies }) => {\n\n  const location = useLocation();\n  return movies.map(({ id, name, title }) => {\n    return (\n      <Link className={styles.link} key={id} to={`/movies/${id}`} state={{from: location}}>\n        <li className={styles.list} >\n          <h2 className={styles.title}>{name || title}</h2>\n        </li>\n      </Link>\n    );\n  });\n};\n\nexport default memo(MoviesItems);\n","\nimport React from 'react';\nimport { memo } from 'react';\n\nimport styles from './movies-list.module.css'\n\nimport MoviesItems from '../MoviesItems/MoviesItems';\n\nconst MoviesList = ({ movies }) => {\n\n    return (\n      <div className={styles.search}>\n        <ul className={styles.movies}>\n          <MoviesItems movies={movies} />\n        </ul>\n      </div>\n    );\n};\n\nexport default memo(MoviesList);","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"search-movies_link__8r7Sy\",\"title\":\"search-movies_title__gWEq+\",\"search\":\"search-movies_search__CcpF-\",\"message\":\"search-movies_message__tBMgF\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"search-bar_form__eq6sB\",\"input\":\"search-bar_input__l1jXq\",\"button\":\"search-bar_button__TIBxr\"};","import { useState} from 'react';\nimport {ImArrowRight2} from 'react-icons/im';\n\nimport styles from './search-bar.module.css';\n\n\nfunction SearchBar ({onSubmit}) {\n  const [search, setSearch] = useState('')\n\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  if(search.trim() === '') {\n    return alert(\"Enter movie for serch\")\n  }\n  onSubmit(search);\n  setSearch('')\n}\n\nreturn (\n  <form className={styles.form} onSubmit={handleSubmit}>\n    \n    <input\n      className={styles.input}\n      name='input'\n      onChange={(e) => setSearch(e.target.value)}\n      value={search}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search movies\"\n/>\n<button className={styles.button} type=\"submit\" >\n      <span>\n        <ImArrowRight2/>\n        </span>\n    </button>\n  </form>\n  )\n}\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport styles from './button.css'\n\nconst Button = ({ loader }) => {\n  return (\n    <button className={styles.loadButton} onClick={()=>loader()}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'components/services/movies-api';\nimport styles from './search-movies.module.css';\n\nimport SearchBar from './SearchBar/SearchBar';\nimport MoviesList from './MoviesList/MoviesList';\nimport Loader from './Loader/Loader';\nimport Button from './Button/Button';\n\nfunction MoviesSearch () {\n  const [movies, setMovies] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [preSearch, setPreSearch] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n\n  const loadMore = () => {\n    setSearchParams({ search, page: Number(page) + 1 });\n  };\n\n  const searchInput = searchMovies => {\n    if (search === searchMovies) {\n      return;\n    }\n    setSearchParams({ search: searchMovies, page: 1 });\n\n    setMovies([]);\n  };\n\n  useEffect(() => {\n\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const data = await searchMovies(search, page);\n\n        setMovies(movies => [...movies, ...data.results]);\n        setTotal(data.total_results);\n        setPreSearch(true);\n\n\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if(search) {\n      \n      fetchPosts();\n\n      document.querySelector('form').reset();\n    }\n  }, [search, page]);\n\n  const totalPage = Math.floor(total / 20);\n\n  return (\n    <div className={styles.search}>\n      <SearchBar onSubmit={searchInput} />\n      <MoviesList movies={movies} />\n      {total === 0 && preSearch && (\n        <>\n          <h2 className={styles.message}>Not found</h2>\n\n        </>\n      )}\n      {error && <h2 className={styles.title}>{error}</h2>}\n      {loading && <Loader text=\"Loading...\" />}\n\n      {movies.length > 0 && page < totalPage && (\n        <Button loader={loadMore} type=\"button\" />\n      )}\n    </div>\n  );\n}\n\nexport default MoviesSearch;\n","import MoviesSearch from 'components/SearchMovies/MoviesSearch'\n\nconst Movies = () => {\n  return <MoviesSearch/>\n}\n\nexport default Movies","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '69985e4f01a18f2ea21ebbfec884ea1f',\n  },\n});\n\nexport const searchMovies = async (name, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: name,\n      page,\n      include_adult: 'false',\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const trendingFilms = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const movieCast = async (id) => {\n  const {data} = await instance.get (`/movie/${id}/credits`);\n  return data;\n}\n\nexport const movieDetails = async (id) => {\n  const {data} = await instance.get (`/movie/${id}`);\n  return data;\n}\n\n\n\nexport const movieReviews= async (id) => {\n  const {data} = await instance.get (`/movie/${id}/reviews`);\n  return data.results;\n}"],"names":["MoviesItems","movies","location","useLocation","map","id","name","title","className","styles","to","state","from","memo","MoviesList","onSubmit","useState","search","setSearch","e","preventDefault","trim","alert","onChange","target","value","type","autoComplete","autoFocus","placeholder","loader","onClick","setMovies","total","setTotal","preSearch","setPreSearch","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","page","useEffect","fetchPosts","searchMovies","data","results","total_results","message","document","querySelector","reset","totalPage","Math","floor","Loader","text","length","Number","instance","axios","baseURL","params","api_key","query","include_adult","language","trendingFilms","movieCast","movieDetails","movieReviews"],"sourceRoot":""}