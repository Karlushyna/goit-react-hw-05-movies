{"version":3,"file":"static/js/342.4b367cb3.chunk.js","mappings":"8PACA,EAA4B,iCAA5B,EAAsE,8BAAtE,EAA0G,2BAA1G,EAA4I,4BAA5I,EAAgL,6BAAhL,EAAoN,4BAApN,EAAuP,4B,SC8EvP,EAzEqB,WAAO,IAAD,EACzB,GAA0BA,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAgBrC,IAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAGOC,EAAAA,EAAAA,IAAaT,GAHpB,OAGTU,EAHS,OAIfX,EAASW,GAJM,gDAKNC,EALM,KAKNA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SANX,yDAAH,qDAShBP,GACD,GAAE,CAACR,IAGDF,EAAO,CAAC,IAEHkB,EAAoElB,EAApEkB,MAAOC,EAA6DnB,EAA7DmB,SAAUC,EAAmDpB,EAAnDoB,OAAQC,EAA2CrB,EAA3CqB,YAAaC,EAA8BtB,EAA9BsB,aAExCC,EAFsEvB,EAAhBwB,aAElCC,MAAM,EAAE,GAE5BC,EAAQN,EAAOO,KAAI,SAACD,GAAD,OAAWA,EAAME,IAAjB,IAAuBC,KAAK,MAOrD,OACE,iBAAKC,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAeC,QAAS,kBAAI5B,EAASE,EAAb,EAA3C,uBAEF,iBAAKwB,UAAWC,EAAhB,WACE,0BACE,gBACAE,IAZN,SAAsBZ,GAEpB,MAAM,kCAAN,OAAyCA,EAC1C,CASUa,CAAYb,GACjBc,IAAKjB,EACLkB,MAAM,MACNC,OAAO,WAET,4BACE,0BAAKnB,EAAL,KAAcK,EAAd,QACA,uCAAeD,EAAagB,QAAQ,OACpC,sCACA,uBAAInB,KACJ,oCACA,uBAAIO,WAGR,eAAII,UAAWC,EAAf,qCAEA,gBAAID,UAAWC,EAAf,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAaQ,GAAG,OAAO/B,MAAO,CAACF,KAAAA,GAAhD,UACE,eAAIwB,UAAWC,EAAf,qBAEF,SAAC,KAAD,CAAMD,UAAWC,EAAaQ,GAAG,UAAU/B,MAAO,CAACF,KAAAA,GAAnD,UACE,eAAIwB,UAAWC,EAAf,2BAIJ,SAAC,KAAD,MAGD,CACF,C,sLC3EKS,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAOjB,EAAMkB,GAAb,yFACHN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNK,MAAOpB,EACPkB,KAAAA,EACAG,cAAe,QACfC,SAAU,WANY,uBAClBlC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,wDAYZmC,EAAa,mCAAG,sGACJX,EAASO,IAAI,uBADT,uBACnB/B,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,qDAKboC,EAAS,mCAAG,WAAOlD,GAAP,yFACFsC,EAASO,IAAT,iBAAwB7C,EAAxB,aADE,uBAChBc,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKTL,EAAY,mCAAG,WAAOT,GAAP,yFACLsC,EAASO,IAAT,iBAAwB7C,IADnB,uBACnBc,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAOZqC,EAAY,mCAAE,WAAOnD,GAAP,yFACJsC,EAASO,IAAT,iBAAwB7C,EAAxB,aADI,uBAClBc,EADkB,EAClBA,KADkB,kBAElBA,EAAKJ,SAFa,2CAAF,qD","sources":["webpack://react-homework-template/./src/components/pages/MovieDetails/movie-details.module.css?503b","components/pages/MovieDetails/MovieDetails.jsx","components/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"movie-details_container__Uy2Dk\",\"button\":\"movie-details_button__17Ibh\",\"gap\":\"movie-details_gap__tKPIL\",\"text\":\"movie-details_text__oSzxR\",\"group\":\"movie-details_group__EWl93\",\"link\":\"movie-details_link__YBaHu\",\"list\":\"movie-details_list__5uu9Z\"};","import { movieDetails } from 'components/services/movies-api';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useParams, useNavigate, useLocation } from 'react-router-dom';\n\nimport styles from './movie-details.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n\n        const results = await movieDetails(id);\n        setMovie(results);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n    fetchPosts()\n  }, [id]);\n\n\n  if(movie) {\n\n  const { title, overview, genres, poster_path, vote_average, release_date} = movie;\n  \n  const date = release_date.slice(0,4);\n\n  const genre = genres.map((genre) => genre.name).join(', ');\n  \n  function posterImage (poster_path) {\n\n    return `https://image.tmdb.org/t/p/w500${poster_path}`;\n  }\n\n  return ( \n    <div className={styles.container}>\n      <button className={styles.button} onClick={()=>navigate(from)}>\n        Go back </button>\n    <div className={styles.gap}>\n      <div>\n        <img \n        src={posterImage(poster_path)} \n        alt={title}\n        width='250' \n        height='350' \n        /></div>\n      <div>\n        <h2>{title} ({date})</h2>\n        <p>Use Score: {vote_average.toFixed(1)}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genre}</p>\n      </div>\n    </div>\n    <h3 className={styles.text}>Additional information</h3>\n\n    <ul className={styles.group}>\n      <Link className={styles.link} to='cast' state={{from}} >\n        <li className={styles.list}>Cast</li>\n      </Link >\n      <Link className={styles.link} to='reviews' state={{from}}>\n        <li className={styles.list}>Reviews</li>\n      </Link >\n    </ul>\n\n    <Outlet/>\n    </div>\n    );\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '69985e4f01a18f2ea21ebbfec884ea1f',\n  },\n});\n\nexport const searchMovies = async (name, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: name,\n      page,\n      include_adult: 'false',\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const trendingFilms = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const movieCast = async (id) => {\n  const {data} = await instance.get (`/movie/${id}/credits`);\n  return data;\n}\n\nexport const movieDetails = async (id) => {\n  const {data} = await instance.get (`/movie/${id}`);\n  return data;\n}\n\n\n\nexport const movieReviews= async (id) => {\n  const {data} = await instance.get (`/movie/${id}/reviews`);\n  return data.results;\n}"],"names":["useState","movie","setMovie","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchPosts","movieDetails","results","response","console","log","data","message","title","overview","genres","poster_path","vote_average","date","release_date","slice","genre","map","name","join","className","styles","onClick","src","posterImage","alt","width","height","toFixed","to","instance","axios","baseURL","params","api_key","searchMovies","page","get","query","include_adult","language","trendingFilms","movieCast","movieReviews"],"sourceRoot":""}